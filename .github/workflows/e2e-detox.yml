name: Detox E2E Tests

on:
  push:
    branches:
      - main
      - add_e2e_android
  pull_request:
    branches:
      - ios_detox_job
      - main
    types:
      - labeled
      - opened
  workflow_dispatch:
    inputs:
      apiLevel:
        description: 'Android API Level'
        required: true
        default: '29'
        type: choice
        options:
          - '29'
          - '30'
          - '31'
      device:
        description: 'Device Type'
        required: true
        default: 'Pixel_3'
        type: choice
        options:
          - 'Pixel_3'
          - 'Pixel_4'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  API_LEVEL: ${ ${{ inputs.apiLevel }} || "29" }
  DEVICE: ${ ${{ inputs.device }} || "Pixel_3" }
  AWS_REGION: 'us-east-1'
  ADMIN_EMAIL: ${{ secrets.MM_MOBILE_E2E_ADMIN_EMAIL }}
  ADMIN_USERNAME: ${{ secrets.MM_MOBILE_E2E_ADMIN_USERNAME }}
  ADMIN_PASSWORD: ${{ secrets.MM_MOBILE_E2E_ADMIN_PASSWORD }}
  BRANCH: ${{ github.head_ref || github.ref_name }} 
  COMMIT_HASH: ${{ github.sha }}
  DETOX_AWS_S3_BUCKET: 'mattermost-detox-report'
  DETOX_AWS_ACCESS_KEY_ID: ${{ secrets.MM_MOBILE_DETOX_AWS_ACCESS_KEY_ID }}
  DETOX_AWS_SECRET_ACCESS_KEY: ${{ secrets.MM_MOBILE_DETOX_AWS_SECRET_ACCESS_KEY }}
  HEADLESS: 'true'
  TYPE: 'PR'
  PULL_REQUEST: 'https://github.com/mattermost/mattermost-mobile/pull/${{ github.event.number }}'
  SITE_1_URL: ${{ secrets.MM_MOBILE_E2E_SITE_1_URL }}
  SITE_2_URL: ${{ secrets.MM_MOBILE_E2E_SITE_2_URL }}
  SITE_3_URL: ${{ secrets.MM_MOBILE_E2E_SITE_3_URL }}
  ZEPHYR_ENABLE: false
  JIRA_PROJECT_KEY: 'MM'
  ZEPHYR_API_KEY: ${{ secrets.MM_MOBILE_E2E_ZEPHYR_API_KEY }}
  ZEPHYR_FOLDER_ID: '3233873'
  TEST_CYCLE_LINK_PREFIX: ${{ secrets.MM_MOBILE_E2E_TEST_CYCLE_LINK_PREFIX }}
  WEBHOOK_URL: ${{ secrets.MM_MOBILE_E2E_WEBHOOK_URL }}
  FAILURE_MESSAGE: "Something has failed"

jobs:
  generate-specs:
    runs-on: ubuntu-22.04
    # if: (contains(github.event.pull_request.labels.*.name, 'E2E iOS tests for PR') || contains(github.event.pull_request.labels.*.name, 'E2E Android tests for PR'))
    outputs:
      specs: ${{ steps.generate-specs.outputs.specs }}
      BUILD_ID: ${{ steps.generate-specs.outputs.BUILD_ID }}
      DEVICE_NAME: ${{ steps.generate-specs.outputs.DEVICE_NAME }}
      DEVICE_OS_VERSION: ${{ steps.generate-specs.outputs.DEVICE_OS_VERSION }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set Build ID
        run: |
          cd detox
          node test_device_info.js ios 
      - name: Generate Test Specs
        id: generate-specs
        uses: ./.github/actions/generate-specs
        with:
          parallelism: 10
          search_path: detox/e2e/test
          device: ${{ env.DEVICE_NAME }}
          os_version: ${{ env.DEVICE_OS_VERSION }}

  # build-android-apk-on-mac:
  #   # if: contains(github.event.pull_request.labels.*.name, 'E2E Android tests for PR')
  #   runs-on: macos-14-large
  #   env:
  #     ORG_GRADLE_PROJECT_jvmargs: -Xmx8g
  #   steps:
  #     - name: ci/checkout-repo
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha }}

  #     - name: ci/prepare-android-build
  #       uses: ./.github/actions/prepare-android-build
  #       env:
  #         STORE_FILE: "${{ secrets.MM_MOBILE_STORE_FILE }}"
  #         STORE_ALIAS: "${{ secrets.MM_MOBILE_STORE_ALIAS }}"
  #         STORE_PASSWORD: "${{ secrets.MM_MOBILE_STORE_PASSWORD }}"
  #         MATTERMOST_BUILD_GH_TOKEN: "${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}"

  #     - name: Cache Gradle dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.gradle/caches
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-

  #     - name: Install Java
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: "17"
  #         distribution: "adopt"
  #         cache: "gradle"

  #     - name: Validate Gradle wrapper
  #       uses: gradle/actions/wrapper-validation@v3

  #     - name: Detox build
  #       run: |
  #         cd detox
  #         npm install
  #         npm install -g detox-cli
  #         npm run e2e:android-build

  #     - name: ci/upload-android-pr-build
  #       uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
  #       with:
  #         name: android-build-apk-${{ github.run_id }}
  #         path: "android/app/build/outputs/apk/**/app-*.apk"

  e2e-android:
    # if: contains(github.event.pull_request.labels.*.name, 'E2E Android tests for PR')
    env:
      IOS: false
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4096m"
    runs-on: ubuntu-22.04
    name: android-detox-e2e-${{ matrix.runId }}
    needs:
      - generate-specs
      # - build-android-apk-on-mac
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-specs.outputs.specs)}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install required libraries for emulator
        run: sudo apt-get install libpulse0 libpulse-dev

      - name: ci/prepare-node-deps
        uses: ./.github/actions/prepare-node-deps

      - name: Liberate disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: false
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: false

      # - name: Download Android APK
      #   uses:  actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
      #   with:
      #     name: android-build-apk-${{ github.run_id }}
      #     path: android/app/build/outputs/apk/

      - name: Set up Android SDK
        env:
          ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl unzip
          curl -o sdk-tools-linux.zip https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          unzip -q sdk-tools-linux.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/tools
          yes | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platform-tools" "emulator" "platforms;android-${{ env.API_LEVEL }}" "build-tools;${{ env.API_LEVEL }}.0.3" "system-images;android-${{ env.API_LEVEL }};google_apis;x86"
          yes | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --licenses
        shell: bash

      - name: Create AVD
        env:
          ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
        run: |
          echo "no" | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/avdmanager create avd -n test -k "system-images;android-${{ env.API_LEVEL }};google_apis;x86" -d "${{ env.DEVICE }}"
          $ANDROID_SDK_ROOT/emulator/emulator -list-avds
        shell: bash

      - name: Update detoxrc.json
        run: |
          sed -i 's/"avdName": "Pixel_3_API_29"/"avdName": "test"/' detoxrc.json
        shell: bash

      - name: Start AVD
        env:
          ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
        run: |
          $ANDROID_SDK_ROOT/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader_indirect &
          adb wait-for-device
          adb devices
        shell: bash
  
      - name: Update detoxrc.json
        run: |
          sed -i 's/"avdName": "Pixel_3_API_29"/"avdName": "test"/' detoxrc.json
        shell: bash

      - name: Start AVD
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader_indirect &
          adb wait-for-device
          adb devices
        shell: bash

      - name: Start React Native Metro Server
        run: npm run start &

      - name: Install Detox Dependencies
        run: cd detox && npm i

      - name: Run Detox E2E Tests
        continue-on-error: true
        run: cd detox && npm run e2e:android-test -- ${{ matrix.specs }}

      - name: Upload Android Test Report
        if: always()
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: android-results-${{ matrix.runId }}
          path: detox/artifacts

  test-android:
    name: Run Android Detox Tests
    runs-on: macos-latest
    needs:
      - generate-specs
    env:
      AVD_NAME: Pixel_3a_API_33
      AVD_PACKAGE: system-images;android-33;google_apis;x86_64
    strategy:
      matrix:
        specs: ${{fromJson(needs.generate-specs.outputs.specs)}}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'

    - name: Create Android Virtual Device
      run: |
        echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name ${{ env.AVD_NAME }} --package ${{ env.AVD_PACKAGE }} --device "pixel_3a"
        $ANDROID_HOME/emulator/emulator -list-avds
        echo "with_newline=$($ANDROID_HOME/emulator/emulator -list-avds | grep ${{ env.AVD_NAME }})"
        echo $with_newline

    - name: Run Android Emulator
      run: |
        echo "Starting emulator"
        nohup $ANDROID_HOME/emulator/emulator -avd ${{ env.AVD_NAME }} -no-audio -no-boot-anim -accel auto &
        $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done; input keyevent 82'

    - name: Start React Native Metro Server
      run: npm run start &

    - name: Install Detox Dependencies
      run: cd detox && npm i

    - name: Run Detox E2E Tests
      continue-on-error: true
      run: cd detox && npm run e2e:android-test -- ${{ matrix.specs }}

    - name: Upload Android Test Report
      if: always()
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: android-results-${{ matrix.runId }}
        path: detox/artifacts

  download-e2e-results:
    runs-on: ubuntu-22.04
    # if: always() && (contains(github.event.pull_request.labels.*.name, 'E2E iOS tests for PR') || contains(github.event.pull_request.labels.*.name, 'E2E Android tests for PR'))
    needs:
      - generate-specs
      - e2e-android
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: ci/prepare-node-deps
        uses: ./.github/actions/prepare-node-deps

      - name: Create artifacts directory
        run: mkdir -p detox/artifacts/

      - name: Download All Android Artifacts
        uses:  actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          path: detox/artifacts/
          pattern: android-results-*

      - name: Save report Detox Dependencies
        run: |
          cd detox
          npm ci
          npm run e2e:save-report
        env:
          IOS: false

  # e2e-remove-label:
  #   if: always() && (contains(github.event.pull_request.labels.*.name, 'E2E iOS tests for PR') || contains(github.event.pull_request.labels.*.name, 'E2E Android tests for PR'))
  #   needs:
  #     - download-e2e-results
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: e2e/remove-label-from-pr
  #       uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
  #       continue-on-error: true # Label might have been removed manually
  #       with:
  #         script: |
  #           const iosLabel = 'E2E iOS tests for PR';
  #           const androidLabel = 'E2E Android tests for PR';
  #           const labels = context.payload.pull_request.labels.map(label => label.name);
  
  #           if (labels.includes(iosLabel)) {
  #             github.rest.issues.removeLabel({
  #               issue_number: context.issue.number,
  #               owner: context.repo.owner,
  #               repo: context.repo.repo,
  #               name: iosLabel,
  #             });
  #           }
  
  #           if (labels.includes(androidLabel)) {
  #             github.rest.issues.removeLabel({
  #               issue_number: context.issue.number,
  #               owner: context.repo.owner,
  #               repo: context.repo.repo,
  #               name: androidLabel,
  #             });
  #           }
  