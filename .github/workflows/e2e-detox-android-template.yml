name: Detox E2E Tests Template

on:
  workflow_call:
    inputs:
      remove-pr-label:
        description: 'Remove PR label'
        required: false
        type: boolean
        default: false
      status_check_context:
        type: string
        required: true
      commit_sha:
        type: string
        required: true
      run-type:
        type: string
        required: false
        default: 'PR'
      testcase_failure_fatal:
        description: 'Should failures be considered fatal'
        required: false
        type: boolean
        default: false

env:
  AWS_REGION: 'us-east-1'
  ADMIN_EMAIL: ${{ secrets.MM_MOBILE_E2E_ADMIN_EMAIL }}
  ADMIN_USERNAME: ${{ secrets.MM_MOBILE_E2E_ADMIN_USERNAME }}
  ADMIN_PASSWORD: ${{ secrets.MM_MOBILE_E2E_ADMIN_PASSWORD }}
  BRANCH: ${{ github.head_ref || github.ref_name }} 
  COMMIT_HASH: ${{ github.sha }}
  DETOX_AWS_S3_BUCKET: 'mattermost-detox-report'
  DETOX_AWS_ACCESS_KEY_ID: ${{ secrets.MM_MOBILE_DETOX_AWS_ACCESS_KEY_ID }}
  DETOX_AWS_SECRET_ACCESS_KEY: ${{ secrets.MM_MOBILE_DETOX_AWS_SECRET_ACCESS_KEY }}
  HEADLESS: false
  TYPE: ${{ inputs.run-type }}
  PULL_REQUEST: 'https://github.com/mattermost/mattermost-mobile/pull/${{ github.event.number }}'
  SITE_1_URL: ${{ secrets.MM_MOBILE_E2E_SITE_1_URL }}
  SITE_2_URL: ${{ secrets.MM_MOBILE_E2E_SITE_2_URL }}
  SITE_3_URL: ${{ secrets.MM_MOBILE_E2E_SITE_3_URL }}
  ZEPHYR_ENABLE: false
  JIRA_PROJECT_KEY: 'MM'
  ZEPHYR_API_KEY: ${{ secrets.MM_MOBILE_E2E_ZEPHYR_API_KEY }}
  ZEPHYR_FOLDER_ID: '3233873'
  TEST_CYCLE_LINK_PREFIX: ${{ secrets.MM_MOBILE_E2E_TEST_CYCLE_LINK_PREFIX }}
  WEBHOOK_URL: ${{ secrets.MM_MOBILE_E2E_WEBHOOK_URL }}
  FAILURE_MESSAGE: "Something has failed"
  
jobs:
  # update-initial-status:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: mattermost/actions/delivery/update-commit-status@main
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       with:
  #         repository_full_name: ${{ github.repository }}
  #         commit_sha: ${{ inputs.commit_sha }}
  #         context: ${{ inputs.status_check_context }}
  #         description: Detox tests for mattermost mobile app
  #         status: pending

  # generate-specs:
  #   needs: update-initial-status
  #   runs-on: ubuntu-22.04
  #   outputs:
  #     specs: ${{ steps.generate-specs.outputs.specs }}
  #     build_id: ${{ env.BUILD_ID }}
  #     device_name: ${{ env.DEVICE_NAME }}
  #     device_os_version: ${{ env.DEVICE_OS_VERSION }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

  #     - name: Set Build ID
  #       id: resolve-device
  #       run: |
  #         cd detox
  #         DEVICE_NAME=$(node -p "require('./.detoxrc').devices['android'].device.avdName")
  #         DEVICE_OS_VERSION=$(node -p "require('./.detoxrc').devices['android'].device.api")
  #         BUILD_ID="${{ github.run_id }}-$DEVICE_NAME-$DEVICE_OS_VERSION"

  #         echo "BUILD_ID=$(echo ${BUILD_ID} | sed 's/ /_/g')" >> $GITHUB_ENV
  #         echo "DEVICE_NAME=$(echo ${DEVICE_NAME})" >> $GITHUB_ENV
  #         echo "DEVICE_OS_VERSION=$(echo ${DEVICE_OS_VERSION})" >> $GITHUB_ENV

  #     - name: Generate Test Specs
  #       id: generate-specs
  #       uses: ./.github/actions/generate-specs
  #       with:
  #         parallelism: 10
  #         search_path: detox/e2e/test
  #         device_name: ${{ env.DEVICE_NAME }}
  #         device_os_version: ${{env.DEVICE_OS_VERSION}}
        
  # build-android-apk:
  #   needs: update-initial-status
  #   runs-on: macos-14-large
  #   env:
  #     ORG_GRADLE_PROJECT_jvmargs: -Xmx8g
  #   steps:
  #     - name: ci/checkout-repo
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha }}

  #     - name: ci/prepare-android-build
  #       uses: ./.github/actions/prepare-android-build
  #       env:
  #         STORE_FILE: "${{ secrets.MM_MOBILE_STORE_FILE }}"
  #         STORE_ALIAS: "${{ secrets.MM_MOBILE_STORE_ALIAS }}"
  #         STORE_PASSWORD: "${{ secrets.MM_MOBILE_STORE_PASSWORD }}"
  #         MATTERMOST_BUILD_GH_TOKEN: "${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}"

  #     - name: Cache Gradle dependencies
  #       uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
  #       with:
  #         path: ~/.gradle/caches
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-

  #     - name: Install Java
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: "17"
  #         distribution: "adopt"
  #         cache: "gradle"

  #     - name: Validate Gradle wrapper
  #       uses: gradle/actions/wrapper-validation@v3

  #     - name: Detox build
  #       run: |
  #         cd detox
  #         npm install
  #         npm install -g detox-cli
  #         npm run e2e:android-build

  #     - name: ci/upload-android-pr-build
  #       uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
  #       with:
  #         name: android-build-apk-${{ github.run_id }}
  #         path: "android/app/build/outputs/apk/**/app-*.apk"

  # e2e-android-on-mac:
  #   name: android-detox-e2e-${{ matrix.runId }}-${{ matrix.deviceName }}-${{ matrix.deviceOsVersion }}
  #   continue-on-error: true
  #   runs-on: macos-13
  #   timeout-minutes: 40
  #   needs:
  #     - generate-specs
  #     # - build-android-apk
  #   strategy:
  #     fail-fast: false
  #     matrix: ${{fromJson(needs.generate-specs.outputs.specs)}}
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v1
  #     with:
  #       fetch-depth: 1

  #   - name: ci/prepare-node-deps
  #     uses: ./.github/actions/prepare-node-deps

  #   - name: Install Sharp CLI for faster image generation during prebuild
  #     run: npm install --global sharp-cli

  #   - name: Start React Native Metro Server
  #     run: npm run start &

  #   - name: Install Detox Dependencies
  #     run: cd detox && npm i

  #   - name: Install Java
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: "17"
  #       distribution: "adopt"
  #       cache: "gradle"

  #   - name: Create destination path
  #     run: mkdir -p android/app/build/outputs/apk

  #   - name: Download artifact
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     run: |
  #       curl -L -H "Authorization: token $GITHUB_TOKEN" \
  #           -H "Accept: application/vnd.github.v3+json" \
  #           https://api.github.com/repos/mattermost/mattermost-mobile/actions/artifacts/1578521977/zip \
  #           --output android/app/build/outputs/apk/artifact.zip

  #   - name: Unzip artifact
  #     run: unzip android/app/build/outputs/apk/artifact.zip -d android/app/build/outputs/apk

  #   - name: Cleanup
  #     run: rm android/app/build/outputs/apk/artifact.zip

  #   - name: Launch Android Emulator
  #     run: |
  #       echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-31;google_apis;x86_64'
  #       echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n android_emulator -k 'system-images;android-31;google_apis;x86_64' --force --device "pixel_6"
  #       echo "Emulator created successfully"
  #       nohup $ANDROID_HOME/emulator/emulator -avd android_emulator -no-snapshot -netdelay none -netspeed full -no-audio -no-boot-anim -accel on -gpu swiftshader_indirect -qemu -m 4096 > /dev/null 2>&1 &
  #       $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\''\r'\'') ]]; do sleep 1; done'
  #       $ANDROID_HOME/platform-tools/adb devices
  #       $ANDROID_HOME/platform-tools/adb shell input keyevent 82
  #       $ANDROID_HOME/platform-tools/adb shell settings put global window_animation_scale 0
  #       $ANDROID_HOME/platform-tools/adb shell settings put global transition_animation_scale 0
  #       $ANDROID_HOME/platform-tools/adb shell settings put global animator_duration_scale 0
  #       sleep 60
  #       screencapture emulator-macos-13.jpg
  #       $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator-macos-13.png

  #   - uses: actions/upload-artifact@v3
  #     with:
  #       name: Android-Emulator-Screenshots
  #       path: emulator-macos-13.jpg
  
  #   - uses: actions/upload-artifact@v3
  #     with:
  #       name: Android-Emulator-Screenshots
  #       path: emulator-macos-13.jpg.png

  #   - name: Run Android Detox E2E Tests on macOS
  #     run: |
  #         cd detox && npm run e2e:android-test -- ${{ matrix.specs }}

  #   - name: Upload Android Test Report
  #     if: always()
  #     uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
  #     with:
  #       name: android-results-${{ matrix.runId }}
  #       path: detox/artifacts

  test:
    runs-on: macos-latest
    strategy:
      fail-fast: false
    env:
      ANDROID_BUILD_TOOLS_VERSION: "34.0.0"
      ANDROID_SDK_PACKAGES: "platform-tools build-tools;34.0.0 system-images;android-31;google_apis;x86_64"
      ANDROID_TARGET: "android-31"
      ANDROID_ARCH: "x86_64"
      EMULATOR_TIMEOUT: "600"
      EMULATOR_NAME: "pixel_6"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: Add avdmanager and sdkmanager to system PATH
        run: |
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

      - name: Accept Licenses
        run: yes | sdkmanager --licenses

      - name: List Available Packages
        run: sdkmanager --list

      - name: Install System Image
        run: sdkmanager "system-images;${{ env.ANDROID_TARGET }};google_apis;${{ env.ANDROID_ARCH }}"

      - name: Build Emulator
        run: |
          echo "no" | avdmanager --verbose create avd --force -n ${{ env.EMULATOR_NAME }} --abi "${{ env.ANDROID_TARGET }}/${{ env.ANDROID_ARCH }}" -k "system-images;${{ env.ANDROID_TARGET }};google_apis;${{ env.ANDROID_ARCH }}"

      - name: Launch Emulator
        run: |
          chmod +x ./start_emu_headless.sh
          EMULATOR_TIMEOUT=${{ env.EMULATOR_TIMEOUT }} EMULATOR_NAME=${{ env.EMULATOR_NAME }} ./start_emu_headless.sh

          screencapture emulator-31-1.jpg
          $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator-31-1.png

      - uses: actions/upload-artifact@v3
        with:
          name: Android-Emulator-Screenshots
          path: emulator-31-1.jpg

      - uses: actions/upload-artifact@v3
        with:
          name: Android-Emulator-Screenshots
          path: emulator-31-1.png

  test-snapshot:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-latest', 'macos-13']
        try: ['0', '1', '2']

    steps:
      - run: system_profiler SPHardwareDataType
      - run: |
          echo "hw.ramSize=4096" >> ~/.android/avd/android_emulator.avd/config.ini
          echo "hw.cpu.ncore=2" >> ~/.android/avd/android_emulator.avd/config.ini
      - run: |
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-29;google_apis;x86_64'
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n android_emulator -k 'system-images;android-29;google_apis;x86_64' --force --device "pixel_6"
          
          #echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-31;google_apis;x86_64'
          #echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n android_emulator -k 'system-images;android-31;google_apis;x86_64' --force --device "pixel_6"
          echo "Emulator created successfully"
          nohup $ANDROID_HOME/emulator/emulator -memory 4096 -avd android_emulator -skin 1080x1920 -no-window -noaudio -no-snapshot -netdelay none -netspeed full -no-audio -no-boot-anim -accel auto -gpu swiftshader_indirect -qemu -lcd-density 420 > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 5; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          $ANDROID_HOME/platform-tools/adb shell input keyevent 82
          $ANDROID_HOME/platform-tools/adb shell settings put global window_animation_scale 0
          $ANDROID_HOME/platform-tools/adb shell settings put global transition_animation_scale 0
          $ANDROID_HOME/platform-tools/adb shell settings put global animator_duration_scale 0
          sleep 120
          screencapture emulator-${{ matrix.os }}-${{ matrix.try }}.jpg
          $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator-${{ matrix.os }}-${{ matrix.try }}.png
      - uses: actions/upload-artifact@v3
        with:
          name: Android-Emulator-Screenshots
          path: emulator-${{ matrix.os }}-${{ matrix.try }}.jpg
      - uses: actions/upload-artifact@v3
        with:
          name: Android-Emulator-Screenshots
          path: emulator-${{ matrix.os }}-${{ matrix.try }}.png

  # download-e2e-results:
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - generate-specs
  #     # - e2e-android-on-mac
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

  #     - name: ci/prepare-node-deps
  #       uses: ./.github/actions/prepare-node-deps

  #     - name: Create artifacts directory
  #       run: mkdir -p detox/artifacts/

  #     - name: Download All Android Artifacts
  #       uses:  actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
  #       with:
  #         path: detox/artifacts/
  #         pattern: android-results-*

  #     - name: Save report Detox Dependencies
  #       run: |
  #         cd detox
  #         npm ci
  #         npm run e2e:save-report
  #       env:
  #         IOS: false

  # update-final-status:
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - generate-specs
  #     - download-e2e-results
  #   steps:
  #     - name: Set Target URL
  #       id: set-url
  #       run: |
  #         s3Folder="${{ env.BUILD_ID }}-${{ env.COMMIT_HASH }}-${{ env.BRANCH }}"
  #         s3Folder=$(echo "$s3Folder" | sed 's/\./-/g')
  #         echo "TARGET_URL=https://${{ env.DETOX_AWS_S3_BUCKET }}.s3.amazonaws.com/${s3Folder}/jest-stare/android-report.html" >> $GITHUB_ENV
  #       env:
  #         BUILD_ID: ${{ needs.generate-specs.outputs.build_id }}

  #     - name: Determine Status
  #       id: determine-status
  #       run: |
  #         if [[ ${{ needs.download-e2e-results.outputs.failures }} -gt 0 && "${{ inputs.testcase_failure_fatal }}" == "true" ]]; then
  #           echo "status=failure" >> $GITHUB_ENV
  #         else
  #           echo "status=success" >> $GITHUB_ENV
  #         fi

  #     - uses: mattermost/actions/delivery/update-commit-status@main
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       with:
  #         repository_full_name: ${{ github.repository }}
  #         commit_sha: ${{ inputs.commit_sha }}
  #         context: ${{ inputs.status_check_context }}
  #         description: |
  #           Completed with ${{ needs.download-e2e-results.outputs.failures }} failures
  #         status: ${{ env.status }}
  #         target_url: ${{ env.TARGET_URL }}

  # e2e-remove-label:
  #   if: ${{ inputs.remove-pr-label }}
  #   needs:
  #     - download-e2e-results
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: e2e/remove-label-from-pr
  #       uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
  #       continue-on-error: true # Label might have been removed manually
  #       with:
  #         script: |
  #           const androidLabel = 'E2E Android tests for PR';
  #           const labels = context.payload.pull_request.labels.map(label => label.name);

  #           if (labels.includes(androidLabel)) {
  #             github.rest.issues.removeLabel({
  #               issue_number: context.issue.number,
  #               owner: context.repo.owner,
  #               repo: context.repo.repo,
  #               name: androidLabel,
  #             });
  #           }
        